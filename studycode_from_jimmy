exprSet <- read.table('GSE42872_series_matrix.txt',sep='\t',quote="",fill=T,header=T,comment.char = "!") #load expression file

rownames(exprSet) <- exprSet[,1]    exprSet <- exprSet[,-1] #make the probe_ID column be the rowname

library(hugene10sttranscriptcluster.db)  #download and library the package corresponding to your platform

ids <- toTable(hugene10sttranscriptclusterSYMBOL)  #get the probe_ID~gene_symbol table

exprSet <- exprSet[rownames(exprSet) %in% ids$probe_id,] #get the rows whose probe_ID exist in ids

#move out rows which have the same gene_symbol
tmp <- by(exprSet,ids$symbol,function(x) rownames(x)[which.max(rowMeans(x))])
probes <- as.character(tmp)
exprSet <- exprSet[rownames(exprSet) %in% probes,]
ids <- ids[match(rownames(exprSet),ids$probe_id),]
rownames(exprSet) <- ids$symbol   

plot(hclust(dist(t(exprSet))))
boxplot(exprSet,col=rainbow(ncol(exprSet)*1.2),main="expression value",las=2)  #check the expression matrix

group_list <- c(rep('control',3),rep('case',3))  #get the group_list

#different expression analysis with limma
library(limma)
design <- model.matrix(~0+factor(group_list))
colnames(design)=levels(factor(group_list))
rownames(design)=colnames(exprSet)
contrast.matrix<-makeContrasts(paste0(unique(group_list),collapse = "-"),levels = design) #exist some problem
fit <- lmFit(exprSet,design)
fit2 <- contrasts.fit(fit, contrast.matrix)
fit2 <- eBayes(fit2) ## default no trend !!
tempOutput = topTable(fit2, coef=1, n=Inf)
nrDEG = na.omit(tempOutput)
#write.csv(nrDEG,"limma_notrend.results.csv",quote = F)
head(nrDEG)

#heatmap
library(pheatmap)
choose_gene <- head(rownames(nrDEG),25)
choose_matrix <- data[choose_gene,]
choose_matrix <- t(scale(t(choose_matrix)))
pheatmap(choose_matrix)

#vocano_plot
library(ggplot2)
DEG=nrDEG
logFC_cutoff <- with(DEG,mean(abs(logFC)) + 2*sd(abs(logFC)))
DEG$change = as.factor(ifelse(DEG$P.Value < 0.05 & abs(DEG$logFC) > logFC_cutoff,
                              ifelse(DEG$logFC > logFC_cutoff ,'UP','DOWN'),'NOT')
)
this_tile <- paste0('Cutoff for logFC is ',round(logFC_cutoff,3),
                    '\nThe number of up gene is ',nrow(DEG[DEG$change =='UP',]) ,
                    '\nThe number of down gene is ',nrow(DEG[DEG$change =='DOWN',])
)

g = ggplot(data=DEG, aes(x=logFC, y=-log10(P.Value), color=change)) +
  geom_point(alpha=0.4, size=1.75) +
  theme_set(theme_set(theme_bw(base_size=20)))+
  xlab("log2 fold change") + ylab("-log10 p-value") +
  ggtitle( this_tile ) + theme(plot.title = element_text(size=15,hjust = 0.5))+
  scale_colour_manual(values = c('blue','black','red')) ## corresponding to the levels(res$change)
print(g)
